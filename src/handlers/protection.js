'use strict';

const { MessageEmbed } = require('discord.js');
const protectionConfig = require('../utils/config').protectionConfig;

exports.handleMemberUpdate = async (client, oldMember, newMember) => {
  const guild = oldMember.guild;
  if (!guild) return;

  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫, –µ—Å–ª–∏ –∏—Ö –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç return
  const settings = protectionConfig[guild.id];
  if (!settings) return;

  // –ï—Å–ª–∏ —Ä–æ–ª–∏ –¥–æ–±–∞–≤–∏–ª–∏—Å—å
  if (oldMember.roles.cache.size < newMember.roles.cache.size) {
    const newRoles = newMember.roles.cache.filter(r => !oldMember.roles.cache.has(r.id) && r.id !== guild.id);

    // –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è
    const audit = await guild.fetchAuditLogs({ type: 25 });
    const entry = audit.entries.find(
      e =>
        e.target.id === newMember.id &&
        e.changes.some(change => change.key === '$add' && change.new.every(role => newRoles.has(role.id))),
    );
    const executor = guild.member(entry.executor);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è
    if (
      executor.hasPermission('ADMINISTRATOR') ||
      executor.roles.cache.some(r => settings.allowedRoles.includes(r.id))
    ) {
      return;
    }

    // –ï—Å–ª–∏ –≤—ã–¥–∞–Ω–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–∞—è —Ä–æ–ª—å
    if (newRoles.some(r => settings.bannedRoles.includes(r.id))) {
      // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const oldRoles = executor.roles.cache.filter(
        r => (executor.id !== newMember.id || !newRoles.has(r.id)) && r.id !== guild.id,
      );
      const oldRolesID = [];
      oldRoles.forEach(r => oldRolesID.push(r.id));

      // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤—ã–¥–∞–Ω–Ω—ã—Ö —Ä–æ–ª–µ–π –≤ —Å—Ç—Ä–æ–∫—É
      const newRolesString = [];
      newRoles.forEach(r => newRolesString.push(r.toString()));

      const channel = guild.channels.cache.get(settings.notifyChannel);

      // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ embed
      const embed = new MessageEmbed()
        .setColor('RED')
        .setAuthor(executor.displayName, executor.user.avatarURL())
        .setTitle('–°–Ω—è—Ç —Å–∏—Å—Ç–µ–º–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏')
        .setDescription(
          `**${executor} –≤—ã–¥–∞–ª —Ä–æ–ª${newRolesString.length === 1 ? '—å' : '–∏'}:
          ${newRolesString.join(' ')}
          –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${newMember}**`,
        )
        .addField('–°–Ω—è—Ç—ã–µ —Ä–æ–ª–∏', oldRolesID.join('\n'))
        .setFooter(executor.id)
        .setTimestamp();

      const msg = await channel.send(`<@&${settings.notifyRoles.join('> <&')}>`, embed);

      await msg.react('üëç');
      await msg.pin();

      await newMember.roles.remove(newRoles);
      await executor.roles.remove(executor.roles.cache.filter(r => !r.managed));
      await executor.roles.add(settings.role);
    }
  }
};

exports.handleReactions = async (client, reaction, reactedUser) => {
  const guild = reaction.message.guild;
  // –ü–æ–∏—Å–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫
  const settings = protectionConfig[guild.id];
  if (!settings) return;

  if (reactedUser.bot) return;

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
  const executor = guild.member(reactedUser);
  if (!executor) return;

  // –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
  const message = reaction.message;
  if (
    message.channel.id !== settings.notifyChannel ||
    message.author !== client.user ||
    !message.embeds ||
    message.embeds.length === 0
  ) {
    return;
  }

  // –ï—Å–ª–∏ –Ω–µ —Ç–æ—Ç embed return
  const embed = message.embeds[0];
  if (embed.title !== '–°–Ω—è—Ç —Å–∏—Å—Ç–µ–º–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏') return;

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  if (
    !executor.hasPermission('ADMINISTRATOR') &&
    !executor.roles.cache.some(role => settings.notifyRoles.includes(role.id))
  ) {
    reaction.users.remove(reactedUser);
    return;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ —ç–º–æ–¥–∑–∏
  if (reaction.emoji.name !== 'üëç') {
    reaction.users.remove(reactedUser);
    return;
  }

  // –ü–æ–∏—Å–∫ –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è
  const member = guild.member(embed.footer.text);
  if (!member) return;

  // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –ø–æ—Ç–µ—Ä—è–Ω–Ω—ã—Ö —Ä–æ–ª–µ–π
  const rolesID = embed.fields[0].value.split('\n');
  const roles = [];
  rolesID.forEach(id => roles.push(guild.roles.cache.get(id)));

  // –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å embed'–æ–º
  embed
    .setColor('GREEN')
    .setTitle('–°–Ω—è—Ç —Å–∏—Å—Ç–µ–º–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)')
    .addField('–û–±–Ω–æ–≤–ª–µ–Ω–æ', `**–†–æ–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º ${executor}**`);

  await message.edit(embed);

  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ —Ä–æ–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
  await member.user.send(`**–í–∞—à–∏ —Ä–æ–ª–∏ –±—ã–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã! –ù–µ –Ω–∞—Ä—É—à–∞–π—Ç–µ –±–æ–ª—å—à–µ!**`);

  // –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ —Ä–æ–ª–µ–π
  await member.roles.add(roles);

  // –°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ —Å–Ω—è—Ç —Å–∏—Å—Ç–µ–º–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  await member.roles.remove(settings.role);

  // –ü–æ–¥—á–∏—Å—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
  await message.reactions.removeAll();
  await message.unpin();
};
