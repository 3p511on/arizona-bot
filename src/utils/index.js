'use strict';

const { MessageEmbed } = require('discord.js');
const { DateTime } = require('luxon');
const { colors } = require('./constants');

exports.random = array => array[Math.floor(Math.random() * array.length)];

exports.sendErrorMessage = ({ message, content, member, emoji, react = true, color, messageType = 'embed' }) => {
  if (!emoji) emoji = exports.random(['üò•', 'üòî', 'ü§î', '‚ö†Ô∏è', '‚õî', 'üö´']);
  if (react) message.react(emoji);
  message.channel
    .send(
      messageType === 'plain_text'
        ? `**\`[${emoji} | –û—à–∏–±–∫–∞] \`${member}\`, ${content}\`**`
        : new MessageEmbed()
            .setColor(color || colors.ERROR)
            .setTitle(`**${emoji} | –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞**`)
            .setDescription(`**${member}, ${content}**`)
            .setFooter('HamsterBot | –û—à–∏–±–∫–∞', message.client.user.displayAvatarURL()),
    )
    .then(msg => setTimeout(() => msg.delete(), 60 * 1000));
};

exports.onRunError = ({ client, warning, message }) => {
  console.warn(
    `[GiveRole] [Warn] –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –∫–æ–¥–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –í—Ä–µ–º—è: ${DateTime.local().toFormat('TT')}\n–û—à–∏–±–∫–∞: ${
      warning.stack
    }`,
  );

  // –ï—Å–ª–∏ –∞–≤—Ç–æ—Ä –∫–æ–º–∞–Ω–¥—ã - —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ, –∏–Ω–∞—á–µ –ø—Ä–æ—Å—Ç–æ —Ñ–∞–∫—Ç
  if (client.isDev(message.author.id)) {
    // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ–ª—å—à–µ, —á–µ–º 1024 —Å–∏–º–≤–æ–ª–∞ (–ª–∏–º–∏—Ç –≤ —Ñ–∏–ª–¥–µ –≤ –µ–º–±–µ–¥–µ), –æ–±—Ä–µ–∑–∞—Ç—å
    const messageToString =
      message.content.length > 1024 ? `${message.content.substring(0, 1021)}...` : message.content;

    return message.channel.send(
      new MessageEmbed()
        .setColor(colors.ERROR)
        .setDescription(`**–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –∫–æ–¥–µ —Å–∏—Å—Ç–µ–º—ã**`)
        .addField(
          '**–û—Ç–ª–∞–¥–∫–∞**',
          [
            `**–ê–≤—Ç–æ—Ä: ${message.author} (\`${message.author.id}\`)`,
            `–°–µ—Ä–≤–µ—Ä: **${message.guild.name}** (\`${message.guild.id}\`)`,
            `–í –∫–∞–Ω–∞–ª–µ: ${message.channel} (\`${message.channel.id})**`,
          ].join('\n'),
        )
        .addField('**–°–æ–æ–±—â–µ–Ω–∏–µ:**', messageToString)
        .addField('**–û—à–∏–±–∫–∞**', warning.stack.length > 1024 ? `${warning.stack.substring(0, 1021)}...` : warning.stack),
    );
  } else {
    return message.channel.send(
      new MessageEmbed()
        .setColor(colors.ERROR)
        .setTitle('**üö´ | –û—à–∏–±–∫–∞**')
        .setDescription('**–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –∫–æ–¥–µ –∫–æ–º–∞–Ω–¥—ã. –°–æ–æ–±—â–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –æ–± —ç—Ç–æ–º**'),
    );
  }
};

exports.checkPermissions = (channel, permissions, member) => {
  const missingPermissions = [];

  // –ï—Å–ª–∏ —É –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è –±–æ—Ç–∞
  if (!member.hasPermission('ADMINISTRATOR')) {
    permissions.forEach(permission => {
      if (!channel.permissionsFor(member).has(permission)) missingPermissions.push(permission);
    });
  }
  return missingPermissions;
};

exports.localizePerm = perm => {
  const russianNames = {
    CREATE_INSTANT_INVITE: '–°–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è',
    KICK_MEMBERS: '–ö–∏–∫–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤',
    BAN_MEMBERS: '–ë–∞–Ω–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤',
    ADMINISTRATOR: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
    MANAGE_CHANNELS: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞–º–∏',
    MANAGE_GUILD: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–º',
    ADD_REACTIONS: '–î–æ–±–∞–≤–ª—è—Ç—å —Ä–µ–∞–∫—Ü–∏–∏',
    VIEW_AUDIT_LOG: '–ü—Ä–æ—Å–º–æ—Ç—Ä –∂—É—Ä–Ω–∞–ª–∞ –∞—É–¥–∏—Ç–∞',

    VIEW_CHANNEL: '–ß–∏—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è',
    SEND_MESSAGES: '–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è',
    SEND_TTS_MESSAGES: '–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å TTS-—Å–æ–æ–±—â–µ–Ω–∏—è',
    MANAGE_MESSAGES: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏',
    EMBED_LINKS: '–í—Å—Ç—Ä–∞–∏–≤–∞—Ç—å —Å—Å—ã–ª–∫–∏',
    ATTACH_FILES: '–ü—Ä–∏–∫—Ä–µ–ø–ª—è—Ç—å —Ñ–∞–π–ª—ã',
    READ_MESSAGE_HISTORY: '–ß–∏—Ç–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π',
    MENTION_EVERYONE: '–£–ø–æ–º—è–Ω—É—Ç—å –≤—Å–µ—Ö',
    USE_EXTERNAL_EMOJIS: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–Ω–µ—à–Ω–∏–µ —ç–º–æ–¥–∑–∏',

    CONNECT: '–ü–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤—ã–µ',
    SPEAK: '–ì–æ–≤–æ—Ä–∏—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤—ã—Ö',
    MUTE_MEMBERS: '–û—Ç–∫–ª—é—á–∞—Ç—å –º–∏–∫—Ä–æ—Ñ–æ–Ω',
    DEAFEN_MEMBERS: '–û—Ç–∫–ª—é—á–∞—Ç—å –∑–≤—É–∫',
    MOVE_MEMBERS: '–ü–µ—Ä–µ–º–µ—â–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤',
    USE_VAD: '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π —Ä–µ–∂–∏–º',

    CHANGE_NICKNAME: '–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫',
    MANAGE_NICKNAMES: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞–º–∏',
    MANAGE_ROLES: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏',
    MANAGE_WEBHOOKS: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ–±—Ö—É–∫–∞–º–∏',
    MANAGE_EMOJIS: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏',
  };

  return russianNames[perm];
};

exports.missingPermsError = ({ message, channel, missingPerms, emoji = 'üîá', react = true, isClient = true }) => {
  const canIgnore = message.channel.id !== channel.id;
  if (!missingPerms.includes('ADD_REACTIONS') || (canIgnore && !react)) message.react(emoji);
  if (!missingPerms.includes('SEND_MESSAGES') || canIgnore) {
    message.channel
      .send(
        !missingPerms.includes('EMBED_LINKS') || canIgnore
          ? new MessageEmbed()
              .setColor(colors.ERROR)
              .setTitle(`**${emoji} | –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞**`)
              .setDescription(
                `**–£ ${isClient ? '–±–æ—Ç–∞' : '–≤–∞—Å'} –Ω–µ—Ö–≤–∞—Ç–∞–µ—Ç –ø—Ä–∞–≤ \`
                      ${missingPerms.map(perm => exports.localizePerm(perm)).join(', ')}\` –≤ –∫–∞–Ω–∞–ª–µ <#${channel.id}>**`,
              )
          : `**\`[${emoji} | –û—à–∏–±–∫–∞] –£ –±–æ—Ç–∞ –Ω–µ—Ö–≤–∞—Ç–∞–µ—Ç –ø—Ä–∞–≤ '${missingPerms
              .map(perm => exports.localizePerm(perm))
              .join(', ')}' –≤ –∫–∞–Ω–∞–ª–µ '${channel.name}'\`**`,
      )
      .then(msg => setTimeout(() => msg.delete(), 25 * 1000));
  }
};

exports.resolveDuration = durationString =>
  parseInt(durationString.slice(0, -1)) *
  { s: 1000, m: 1000 * 60, h: 1000 * 60 * 60, d: 1000 * 60 * 60 * 24 }[durationString[durationString.length - 1]];

exports.formatDuration = duration => {
  let str = '';
  const days = Math.floor(duration / (24 * 60 * 60 * 1000));
  if (days !== 0) {
    if (days % 10 === 1 && days !== 11) str += `${days} –¥–µ–Ω—å `;
    else if (days % 10 === 0 || (days >= 11 && days <= 14) || days % 10 >= 5) str += `${days} –¥–Ω–µ–π `;
    else if (days % 10 <= 4) str += `${days} –¥–Ω—è `;
  }
  duration %= 24 * 60 * 60 * 1000;
  const hours = Math.floor(duration / (60 * 60 * 1000));
  if (hours !== 0) {
    if (hours % 10 === 1 && hours !== 11) str += `${hours} —á–∞—Å `;
    else if (hours % 10 === 0 || (hours >= 11 && hours <= 14) || hours % 10 >= 5) str += `${hours} —á–∞—Å–æ–≤ `;
    else if (hours % 10 <= 4) str += `${hours} —á–∞—Å–∞ `;
  }
  duration %= 60 * 60 * 1000;
  const minutes = Math.floor(duration / (60 * 1000));
  if (minutes !== 0) {
    if (minutes % 10 === 1 && minutes !== 11) str += `${minutes} –º–∏–Ω—É—Ç—É `;
    else if (minutes % 10 === 0 || (minutes >= 11 && minutes <= 14) || minutes % 10 >= 5) str += `${minutes} –º–∏–Ω—É—Ç `;
    else if (minutes % 10 <= 4) str += `${minutes} –º–∏–Ω—É—Ç—ã `;
  }
  duration %= 60 * 1000;
  const seconds = Math.floor(duration / 1000);
  if (seconds !== 0) {
    if (seconds % 10 === 1 && seconds !== 11) str += `${seconds} —Å–µ–∫—É–Ω–¥—É `;
    else if (seconds % 10 === 0 || (seconds >= 11 && seconds <= 14) || seconds % 10 >= 5) str += `${seconds} —Å–µ–∫—É–Ω–¥ `;
    else if (seconds % 10 <= 4) str += `${seconds} —Å–µ–∫—É–Ω–¥—ã `;
  }
  return str.trim();
};
